{"version":3,"sources":["component/Navbar.js","component/TextForm.js","component/Alert.js","Bpp.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","Fragment","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","placeholder","onClick","changeModeToggle","htmlFor","TextForm","text","setText","useState","style","color","heading","value","onChange","event","newText","target","rows","handleUpclick","toUpperCase","showMessage","handleLowerclick","toLowerCase","handleClearText","handleCopyText","textOne","document","getElementById","select","navigator","clipboard","writeText","handleExtraSpace","removeExtra","split","join","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","Bpp","textMode","showAlert","setAlert","message","setTimeout","body","backgroundColor","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.170c3241.chunk.js","sourcesContent":["import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n//import { Link } from \"react-router-dom\"\r\n\r\nexport default function Navbar(props) {\r\n\r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\"> Home </a>\r\n                            </li>\r\n                            {/* <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n                            </li> */}\r\n                        </ul>\r\n                        <form className=\"d-flex mx-5\" role=\"search\">\r\n                            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                            <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n                        </form>\r\n\r\n                        <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                            <input className=\"form-check-input\" type=\"checkbox\" onClick={props.changeModeToggle} role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\"> Disable {props.mode} mode</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string\r\n}","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleUpclick = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showMessage('Sucessfully converted into uppercase..!', 'success');\r\n    }\r\n\r\n    const handleLowerclick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showMessage('Sucessfully converted into Lowercase..!', 'success');\r\n    }\r\n\r\n    const handleClearText = () => {\r\n        let clearText = ' ';\r\n        setText(clearText);\r\n        props.showMessage('Sucessfully clear text..!', 'success');\r\n    }\r\n\r\n    const handleCopyText = () => {\r\n        var textOne = document.getElementById(\"MyBox\");\r\n        textOne.select();\r\n        navigator.clipboard.writeText(textOne.value);\r\n        props.showMessage('Sucessfully copy text..!', 'success');\r\n    }\r\n\r\n    const handleExtraSpace = () => {\r\n        var removeExtra = text.split(/[ ]+/);\r\n        setText(removeExtra.join(\" \"));\r\n        props.showMessage('Sucessfully removed extra space..!', 'success');\r\n    }\r\n\r\n    const handleonChange = (event) => {\r\n        let newText = event.target.value;\r\n        setText(newText);\r\n    }\r\n\r\n    const [text, setText] = useState(\"Enter a text here\");\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container mt-3\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <h1 className=\"mt-3 mb-3\">{props.heading}</h1>\r\n\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} onChange={handleonChange} id=\"MyBox\" rows=\"8\"></textarea>\r\n                </div>\r\n\r\n                <button className=\"btn btn-primary mx-2 mb-2\" onClick={handleUpclick}> Convert to Uppercase </button>\r\n                <button className=\"btn btn-primary mx-2 mb-2\" onClick={handleLowerclick}> Convert to Lowercase </button>\r\n                <button className=\"btn btn-primary mx-2 mb-2\" onClick={handleClearText}> Clear Text </button>\r\n                <button className=\"btn btn-primary mx-2 mb-2\" onClick={handleCopyText}> Copy Text </button>\r\n                <button className=\"btn btn-primary mx-2 mb-2\" onClick={handleExtraSpace}> Remove Extra Spaces </button>\r\n            </div>\r\n\r\n            <div className=\"container mt-3\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <h1>Your Text Summery</h1>\r\n                <p>Word Count: {text.split(\" \").length} Text count: {text.length}</p>\r\n                <p>{0.008 * text.split(\" \").length} Read Time Per Word</p>\r\n                <h2>Preview:</h2>\r\n                <p>{text}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong> {capitalize(props.alert.type)} </strong>  : {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert","import Navbar from \"./component/Navbar\";\r\nimport TextForm from \"./component/TextForm\";\r\n//import About from \"./component/About\";\r\nimport './Bpp.css';\r\nimport React, { useState } from \"react\";\r\nimport Alert from \"./component/Alert\";\r\n\r\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\n\r\nfunction Bpp(props) {\r\n\r\n    const [mode, textMode] = useState(\"light\");\r\n    const [showAlert, setAlert] = useState(null);\r\n\r\n    const showMessage = (message, type) => {\r\n        setAlert({\r\n            msg: message,\r\n            type: type\r\n        });\r\n\r\n        setTimeout(() => {\r\n            setAlert(null);\r\n        }, 2000);\r\n    }\r\n\r\n    const changeModeToggle = () => {\r\n\r\n        if (mode === 'light') {\r\n            textMode(\"dark\");\r\n            document.body.style.backgroundColor = 'black';\r\n            showMessage(\"Dark mode enbled..!\", \"success\");\r\n            document.title = 'Text Utiles - Dark mode enable.';\r\n        } else {\r\n            textMode(\"light\");\r\n            document.body.style.backgroundColor = 'white';\r\n            showMessage(\"Light mode enbled..!\", \"success\");\r\n            document.title = 'Text Utiles - Light mode enable.';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* <Router> */}\r\n            <Navbar title=\"TextUtiles\" mode={mode} changeModeToggle={changeModeToggle}></Navbar >\r\n            <Alert alert={showAlert} />\r\n            <div className=\"container\">\r\n                <TextForm showMessage={showMessage} heading=\"Enter a text\" mode={mode} />\r\n                {/* <Routes>\r\n                        <Route exact path=\"/\" element={<TextForm showMessage={showMessage} heading=\"Enter a text\" mode={mode} />} />\r\n                        <Route exact path=\"/about\" element={<About />} />\r\n                    </Routes> */}\r\n            </div>\r\n            {/* </Router> */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Bpp;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport Bpp from './Bpp';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Bpp />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}